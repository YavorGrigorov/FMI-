

	Logic operators
	
	<AND, OR, XOR> <dst>, <src>
		takes from src and writes in dst
	NOT <dst>
		flips all bits e.g. 1 -> 0 & 0 -> 1
	TEST <dst>, <src>
		doesn't change dst and src and does the AND operation and writes the res in ZF, SF, PF
		
		*Pairity flag (PF) - 
	BT <src>, <n>
		TEST on the n-th bit and sets the CF
	BTS <src>, <n>
		Bit test and set the n-th bit to 1
	BTR <src>, <n>
		Bit test and set the n-th bit to 0
	BTC <src>, <n>
		Bit test and set the n-th bit to it's oposit (e.g. 1  -> 0, 0 -> 1)
	
----------------------------------------------------------------------------------------------------
	
	Shift commands: // fuck it, in the pdf are the rest
	
	Logical shift 	-- i -> void -> 0  // e.g. 1001 --> 0100
	Arithmetic 		-- ignores the eldest bit and does a shift
	Cyclic 			-- takes the last and puts it in first and the other way round
		ex: right by 1	::	1001 --> 1100
	Carry 			-- i --> CF and void --> 0
	
	
	